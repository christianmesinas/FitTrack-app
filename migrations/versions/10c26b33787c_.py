"""empty message

Revision ID: 10c26b33787c
Revises: 
Create Date: 2025-08-30 13:29:15.474113

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '10c26b33787c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise_muscle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('muscle', sa.Enum('ABDOMINALS', 'ABDUCTORS', 'ADDUCTORS', 'BICEPS', 'CALVES', 'CHEST', 'FOREARMS', 'GLUTES', 'HAMSTRINGS', 'LATS', 'LOWER_BACK', 'MIDDLE_BACK', 'NECK', 'QUADRICEPS', 'SHOULDERS', 'TRAPS', 'TRICEPS', name='muscle'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auth0_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('current_weight', sa.Float(), nullable=True),
    sa.Column('fitness_goal', sa.Float(), nullable=True),
    sa.Column('weekly_workouts', sa.Integer(), nullable=True),
    sa.Column('registration_step', sa.String(length=20), nullable=True),
    sa.Column('account_type', sa.String(length=20), nullable=True),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('specialization', sa.String(length=50), nullable=True),
    sa.Column('experience_years', sa.String(length=20), nullable=True),
    sa.Column('certification', sa.Text(), nullable=True),
    sa.Column('current_workout_plan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['current_workout_plan_id'], ['workout_plan.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('auth0_id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_name'), ['name'], unique=False)

    op.create_table('workout_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workout_plan', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workout_plan_user_id'), ['user_id'], unique=False)

    op.create_table('exercise',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('force', sa.Enum('STATIC', 'PULL', 'PUSH', name='force'), nullable=True),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'EXPERT', name='experiencelevel'), nullable=False),
    sa.Column('mechanic', sa.Enum('ISOLATION', 'COMPOUND', name='mechanic'), nullable=True),
    sa.Column('equipment', sa.Enum('MEDICINE_BALL', 'DUMBBELL', 'BODY_ONLY', 'BANDS', 'KETTLEBELLS', 'FOAM_ROLL', 'CABLE', 'MACHINE', 'BARBELL', 'EXERCISE_BALL', 'E_Z_CURL_BAR', 'OTHER', name='equipment'), nullable=True),
    sa.Column('category', sa.Enum('POWERLIFTING', 'STRENGTH', 'STRETCHING', 'CARDIO', 'OLYMPIC_WEIGHTLIFTING', 'STRONGMAN', 'PLYOMETRICS', name='category'), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=False),
    sa.Column('images', sa.Text(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('exercise', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exercise_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_exercise_equipment'), ['equipment'], unique=False)
        batch_op.create_index(batch_op.f('ix_exercise_level'), ['level'], unique=False)
        batch_op.create_index(batch_op.f('ix_exercise_name'), ['name'], unique=False)

    op.create_table('weight_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('logged_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('total_sets', sa.Integer(), nullable=False),
    sa.Column('total_reps', sa.Integer(), nullable=False),
    sa.Column('total_weight', sa.Float(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.String(length=50), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('exercise_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exercise_log_exercise_id'), ['exercise_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exercise_log_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exercise_log_workout_plan_id'), ['workout_plan_id'], unique=False)

    op.create_table('exercise_muscle_association',
    sa.Column('exercise_id', sa.String(length=50), nullable=False),
    sa.Column('muscle_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['muscle_id'], ['exercise_muscle.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('exercise_id', 'muscle_id')
    )
    op.create_table('workout_plan_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.String(length=50), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('duration_minutes', sa.Float(), nullable=True),
    sa.Column('distance_km', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workout_plan_exercise', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workout_plan_exercise_exercise_id'), ['exercise_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workout_plan_exercise_workout_plan_id'), ['workout_plan_id'], unique=False)

    op.create_table('set_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=True),
    sa.Column('exercise_id', sa.String(length=50), nullable=False),
    sa.Column('workout_plan_exercise_id', sa.Integer(), nullable=True),
    sa.Column('set_number', sa.Integer(), nullable=False),
    sa.Column('reps', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('duration_minutes', sa.Float(), nullable=True),
    sa.Column('distance_km', sa.Float(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('workout_session_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workout_plan_exercise_id'], ['workout_plan_exercise.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plan.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('set_logs')
    with op.batch_alter_table('workout_plan_exercise', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workout_plan_exercise_workout_plan_id'))
        batch_op.drop_index(batch_op.f('ix_workout_plan_exercise_exercise_id'))

    op.drop_table('workout_plan_exercise')
    op.drop_table('exercise_muscle_association')
    with op.batch_alter_table('exercise_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exercise_log_workout_plan_id'))
        batch_op.drop_index(batch_op.f('ix_exercise_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_exercise_log_exercise_id'))

    op.drop_table('exercise_log')
    op.drop_table('workout_sessions')
    op.drop_table('weight_log')
    with op.batch_alter_table('exercise', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exercise_name'))
        batch_op.drop_index(batch_op.f('ix_exercise_level'))
        batch_op.drop_index(batch_op.f('ix_exercise_equipment'))
        batch_op.drop_index(batch_op.f('ix_exercise_category'))

    op.drop_table('exercise')
    with op.batch_alter_table('workout_plan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workout_plan_user_id'))

    op.drop_table('workout_plan')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_name'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('exercise_muscle')
    # ### end Alembic commands ###
